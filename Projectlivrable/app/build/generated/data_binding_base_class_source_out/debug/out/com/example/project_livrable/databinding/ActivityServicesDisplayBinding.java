// Generated by view binder compiler. Do not edit!
package com.example.project_livrable.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project_livrable.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityServicesDisplayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout LinearLayout;

  @NonNull
  public final Button ServiceAdderButton;

  @NonNull
  public final ListView servicesList;

  @NonNull
  public final TextView servicesText;

  private ActivityServicesDisplayBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout LinearLayout, @NonNull Button ServiceAdderButton,
      @NonNull ListView servicesList, @NonNull TextView servicesText) {
    this.rootView = rootView;
    this.LinearLayout = LinearLayout;
    this.ServiceAdderButton = ServiceAdderButton;
    this.servicesList = servicesList;
    this.servicesText = servicesText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityServicesDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityServicesDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_services_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityServicesDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LinearLayout;
      LinearLayout LinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (LinearLayout == null) {
        break missingId;
      }

      id = R.id.ServiceAdderButton;
      Button ServiceAdderButton = ViewBindings.findChildViewById(rootView, id);
      if (ServiceAdderButton == null) {
        break missingId;
      }

      id = R.id.servicesList;
      ListView servicesList = ViewBindings.findChildViewById(rootView, id);
      if (servicesList == null) {
        break missingId;
      }

      id = R.id.servicesText;
      TextView servicesText = ViewBindings.findChildViewById(rootView, id);
      if (servicesText == null) {
        break missingId;
      }

      return new ActivityServicesDisplayBinding((ConstraintLayout) rootView, LinearLayout,
          ServiceAdderButton, servicesList, servicesText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
